name: üß± Build DLL & release (Windows)

env:
    PLUGIN_NAME: CustomQuickchat
    TAG_NAME: ${{ github.event.inputs.tag || github.ref_name }}

on:
    push:
        tags:
            - "v*.*.*"
    workflow_dispatch:
        inputs:
            tag:
                description: "Release tag (e.g. v1.0.1)"
                required: true
permissions:
    contents: write

jobs:
    check-changelog:
        name: Check changelog (main)
        runs-on: windows-latest
        outputs:
            changelog: ${{ steps.changelog.outputs.changelog }}
        steps:
            - name: üì• Checkout repository (main)
              uses: actions/checkout@v4
              with:
                  ref: main
                  submodules: false

            - name: üìù Extract changes from changelog
              id: changelog
              shell: bash
              run: |
                  # Prefer manual input if available
                  TAG="${{ github.event.inputs.tag || github.ref_name }}"

                  # fail if tag not found in CHANGELOG.md
                  if ! grep -q "^## $TAG" CHANGELOG.md; then
                    echo "‚ùå Tag '$TAG' not found in CHANGELOG.md"
                    exit 1
                  fi

                  echo "Using tag: $TAG"

                  NOTES=$(awk "/^## $TAG/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md)

                  echo "Extracted notes:"
                  echo "$NOTES"

                  {
                    echo "changelog<<EOF"
                    echo "$NOTES"
                    echo "EOF"
                  } >> "$GITHUB_OUTPUT"

    build:
        runs-on: windows-latest
        needs: check-changelog
        strategy:
            matrix:
                speech_to_text: [ON, OFF]

        steps:
            - name: üì• Checkout repository
              uses: actions/checkout@v4
              with:
                  submodules: false

            - name: üçÜ Initialize submodules
              run: ./scripts/init-submodules.bat

            - name: ü™ü Set up MSVC
              uses: ilammy/msvc-dev-cmd@v1

            - name: ‚öôÔ∏è Set up CMake
              uses: jwlawson/actions-setup-cmake@v1

            - name: ü•∑ Set up Ninja
              uses: seanmiddleditch/gha-setup-ninja@v3

            - name: üß± Configure project (CMake)
              run: cmake --preset windows-x64-msvc

            - name: üî® Build project (CMake + Ninja)
              run: cmake --build build

            - name: ü•µ Prepare release files
              shell: bash
              run: |
                  7z a source.zip * -xr!README.md -xr!build -xr!plugins -xr!scripts -xr!assets -xr!.git
                  mkdir -p dist temp/debug temp/installation_zip
                  mv ./source.zip temp/debug
                  cp ./plugins/*.dll temp/installation_zip
                  mv ./scripts/install.bat temp/installation_zip
                  mv ./plugins/*.dll temp/debug
                  mv ./plugins/*.pdb temp/debug
                  7z a "dist/${{ env.PLUGIN_NAME }}.zip" ./temp/installation_zip/*
                  7z a dist/debug.zip ./temp/debug/*

            - name: üì¶ Upload build artifacts (${{ inputs.artifact_suffix }})
              uses: actions/upload-artifact@v4
              with:
                  name: artifacts
                  path: dist/*

            # build with STT
            - name: üß© Uncomment USE_SPEECH_TO_TEXT macro
              run: ./scripts/toggle-macro.ps1 -FilePath "./CustomQuickchat/CustomQuickchat.h" -MacroName "USE_SPEECH_TO_TEXT" -CommentOut 0

            - name: üî® Build solution (with STT)
              run: msbuild CustomQuickchat.sln /p:Configuration=Release /p:Platform=x64 /p:VcpkgEnabled=true /p:VcpkgRoot=${{ github.workspace }}\vcpkg

            - name: üêû Add STT .pdb to zip folder
              run: |
                  copy "${{ github.workspace }}\plugins\CustomQuickchat.pdb" "pdb_zip\CustomQuickchat-with-STT.pdb"
              shell: cmd

            - name: üì¶ Upload debugging symbols zip
              uses: actions/upload-artifact@v4
              with:
                  name: debug-symbols
                  path: pdb_zip\*

            - name: ü§ê Prepare installation zip (with STT)
              run: |
                  mkdir installation_zip_w_stt\CustomQuickchat\SpeechToText
                  copy "${{ github.workspace }}\plugins\*.dll" installation_zip_w_stt\
                  copy "${{ github.workspace }}\scripts\install.bat" installation_zip_w_stt\
              shell: cmd

            - name: üêç Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"

            - name: ‚¨áÔ∏è Install required python modules
              run: |
                  pip install pyinstaller
                  cd ./speech_to_text_server
                  pip install -r requirements.txt

            - name: üí© Bundle Python script with PyInstaller
              run: |
                  pyinstaller ./speech_to_text_server/speech-to-text-server.pyw `
                  --noconfirm `
                  --onedir `
                  --console `
                  --name "SpeechToText" `
                  --distpath installation_zip_w_stt/CustomQuickchat

            - name: üì¶ Upload CustomQuickchat-with-STT installation zip
              uses: actions/upload-artifact@v4
              with:
                  name: CustomQuickchat-with-STT
                  path: installation_zip_w_stt\*
